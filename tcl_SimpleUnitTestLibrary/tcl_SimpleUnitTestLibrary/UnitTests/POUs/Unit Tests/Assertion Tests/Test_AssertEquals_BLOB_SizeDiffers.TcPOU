<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="Test_AssertEquals_BLOB_SizeDiffers" Id="{44902639-5468-41c0-8039-200bbf12641c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_AssertEquals_BLOB_SizeDiffers EXTENDS TUnitTestBase
VAR
    AssertionUnderTest : TAssertion(AssertionListenerMock);
    AssertionListenerMock : TAssertionListenerMock;
    BYTE_Variable : BYTE := 123;
    WORD_Variable : WORD := 456;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Initialise the classes under test (may be repaeting the tests)...
AssertionListenerMock.fb_Init(
    bInitRetains      := FALSE,
	bInCopyCode       := FALSE);
AssertionUnderTest.fb_Init(
    bInitRetains      := FALSE,
	bInCopyCode       := FALSE,
    AssertionListener := AssertionListenerMock);

// Test the assertion...
AssertionUnderTest.AssertEquals_BLOB(
    Expected := BYTE_Variable,
    Actual   := WORD_Variable,
    VariableName := 'WORD_VariableAsBlob');
 
    
// Check the assertion worked...    
Assertion.AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := AssertionListenerMock.AssertionFailed,
    VariableName := 'AssertionListenerMock.AssertionFailed');

// Check the assertion messages...    
Assertion.AssertEquals_STRING(
    Expected := 'AssertEquals_BLOB failed in AssertionListenerMock: Value "Blob.Size"',
    Actual   := AssertionListenerMock.AssertionMessage,
    VariableName := 'AssertionListenerMock.AssertionMessage');

Assertion.AssertEquals_STRING(
    Expected := '  Expected = 1',
    Actual   := AssertionListenerMock.ExpectedAsString,
    VariableName := 'AssertionListenerMock.ExpectedAsString');

Assertion.AssertEquals_STRING(
    Expected := '  Actual   = 2',
    Actual   := AssertionListenerMock.ActualAsString,
    VariableName := 'AssertionListenerMock.ActualAsString');

TestFinished();    ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>