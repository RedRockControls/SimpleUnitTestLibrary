<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="Test_AssertEquals_BLOB_TypeContentDiffers" Id="{49820635-44e0-46d4-82c4-e421e81a4c37}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_AssertEquals_BLOB_TypeContentDiffers EXTENDS TUnitTestBase
VAR
    AssertionUnderTest : TAssertion(AssertionListenerMock);
    AssertionListenerMock : TAssertionListenerMock;
    
    // Sizes are the same, but TypeClass differs...
    INT_Variable  : WORD := 123;
    WORD_Variable : WORD := 124;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[AssertionListenerMock.AssertionFailed  := FALSE;
AssertionListenerMock.AssertionMessage := '';
AssertionListenerMock.ExpectedAsString := '';
AssertionListenerMock.ActualAsString   := '';

// Test the assertion...
AssertionUnderTest.AssertEquals_BLOB(
    Expected := INT_Variable,
    Actual   := WORD_Variable,
    ObjectName := 'AssertionTest',
    VariableName := 'WORD_VariableAsBlob');
 
    
// Check the assertion worked...    
Assertion.AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := AssertionListenerMock.AssertionFailed,
    ObjectName := _TestName,
    VariableName := 'AssertionListenerMock.AssertionFailed');

// Check the assertion messages...    
Assertion.AssertEquals_STRING(
    Expected := 'AssertEquals_BLOB failed in AssertionTest: Contents differ',
    Actual   := AssertionListenerMock.AssertionMessage,
    ObjectName := _TestName,
    VariableName := 'AssertionListenerMock.AssertionMessage');

Assertion.AssertEquals_STRING(
    Expected := '',
    Actual   := AssertionListenerMock.ExpectedAsString,
    ObjectName := _TestName,
    VariableName := 'AssertionListenerMock.ExpectedAsString');

Assertion.AssertEquals_STRING(
    Expected := '',
    Actual   := AssertionListenerMock.ActualAsString,
    ObjectName := _TestName,
    VariableName := 'AssertionListenerMock.ActualAsString');


TestFinished();    ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>