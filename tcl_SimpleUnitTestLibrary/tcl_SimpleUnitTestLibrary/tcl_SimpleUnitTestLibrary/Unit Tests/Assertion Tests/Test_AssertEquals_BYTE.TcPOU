<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="Test_AssertEquals_BYTE" Id="{ea030d55-01af-4fba-98c9-b10269b9e92c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_AssertEquals_BYTE EXTENDS TUnitTestBase
VAR
    AssertionUnderTest : TAssertion(AssertionListenerMock);
    AssertionListenerMock : TAssertionListenerMock;
    BYTE_Variable : BYTE := 123;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[AssertionListenerMock.AssertionFailed  := FALSE;
AssertionListenerMock.AssertionMessage := '';
AssertionListenerMock.ExpectedAsString := '';
AssertionListenerMock.ActualAsString   := '';

// Test the assertion...
AssertionUnderTest.AssertEquals_BYTE(
    Expected := 234,
    Actual   := BYTE_Variable,
    VariableName := 'BYTE_Variable');
 
// Check the assertion worked...    
Assertion.AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := AssertionListenerMock.AssertionFailed,
    VariableName := 'AssertionListenerMock.AssertionFailed');

// Check the assertion messages...    
Assertion.AssertEquals_STRING(
    Expected := 'AssertEquals_BYTE failed in AssertionTest: Value "BYTE_Variable"',
    Actual   := AssertionListenerMock.AssertionMessage,
    VariableName := 'AssertionListenerMock.AssertionMessage');

Assertion.AssertEquals_STRING(
    Expected := '  Expected = 234',
    Actual   := AssertionListenerMock.ExpectedAsString,
    VariableName := 'AssertionListenerMock.ExpectedAsString');

Assertion.AssertEquals_STRING(
    Expected := '  Actual   = 123',
    Actual   := AssertionListenerMock.ActualAsString,
    VariableName := 'AssertionListenerMock.ActualAsString');

TestFinished();    ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>