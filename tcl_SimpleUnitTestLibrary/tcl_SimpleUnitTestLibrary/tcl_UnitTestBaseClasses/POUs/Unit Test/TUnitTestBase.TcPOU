<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="TUnitTestBase" Id="{2716a74b-00b8-44b5-b7e8-bde5fdd3d3fa}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'}
FUNCTION_BLOCK ABSTRACT TUnitTestBase IMPLEMENTS IUnitTest, IAssertionListener
VAR
    {attribute 'instance-path'} 
    {attribute 'no_init'}
    _TestName       : T_MaxString; // Automatically initialised with the full name of the instance
    _TestFailed     : BOOL;
    _TestFinished   : BOOL;
    _ImageRef       : STRING;
    _MessageList    : IAssertionMessageList;
    
    Assertion : TAssertion(AssertionListener := THIS^); // Callback to allow the Assertion to update the message list on assertion failed

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{c4ee87b3-79f4-4e44-914b-1fd2c8b96c50}" />
    <Folder Name="Properties" Id="{a28878d3-67e7-4a1d-9964-7e24b0862f67}" />
    <Method Name="Execute" Id="{9d4d5cb9-cd4b-404a-9343-ef8bd4043f30}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Execute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{7e9e4b75-0b79-4af8-b29e-08e49710d666}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
    TestSuite : ITestSuite;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite <> 0 THEN
    THIS^.setTestName(TestSuite.Name);
    TestSuite.AddTest(THIS^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialise" Id="{8c607387-56e3-442d-9f48-702bdb51e8ad}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Initialise
VAR_INPUT
    MessageList : IAssertionMessageList;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_TestFailed   := FALSE;
_TestFinished := FALSE;
_ImageRef     := '0';
_MessageList  := MessageList;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnAssertionFailed" Id="{a9b83090-539d-4539-b02b-3c4012c92864}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD OnAssertionFailed
VAR_INPUT
    AssertionMessage : T_MaxString;
    ExpectedAsString : T_MaxString;
    ActualAsString   : T_MaxString;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_TestFailed := TRUE;
_MessageList.AddMessage(AssertionMessage);

IF ExpectedAsString <> '' THEN
    _MessageList.AddMessage(ExpectedAsString);
END_IF

IF ActualAsString <> '' THEN
    _MessageList.AddMessage(ActualAsString);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="setTestName" Id="{a3ebd022-a962-460b-b749-c6934865afca}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD setTestName
VAR_INPUT
    GroupName : STRING;
END_VAR
VAR
    StringSplitter : TStringSplitter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[StringSplitter.Init(
    Str := _TestName,
    Delim1 := '.',
    Delim2 := '');
    
WHILE StringSplitter.HasMore() DO
    _TestName := StringSplitter.GetNext(); // to get last sub-section
END_WHILE

IF GroupName <> '' THEN
    _TestName := F_FormatStringEx2(Format := '%s.%s',arg1 := GroupName, arg2 := _TestName);
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestFinished" Id="{ced04d66-d048-47e1-9c71-4ac4a1e51472}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD TestFinished
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_TestFinished := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="TestHasFailed" Id="{27520f4d-136d-4400-b2e6-f007285814af}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY TestHasFailed : BOOL]]></Declaration>
      <Get Name="Get" Id="{d8010879-b867-4f7f-b078-9b7053bfca1a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TestHasFailed := _TestFailed;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="TestHasFinished" Id="{7e960da8-2268-4fb6-b3e4-1d10693a431f}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY TestHasFinished : BOOL]]></Declaration>
      <Get Name="Get" Id="{15856091-691b-480c-8060-68960082e90d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TestHasFinished := _TestFinished;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="TestName" Id="{ac5920b8-13c5-426d-8b0e-7fab5090176f}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY TestName : T_MaxString]]></Declaration>
      <Get Name="Get" Id="{2e4ad193-65e7-4dbc-83b4-97eca75502b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TestName := _TestName;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>